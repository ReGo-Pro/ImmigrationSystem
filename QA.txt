======================================================================================================================================================================
Q.	When submitting a DTO to SignUp endpoint, is it safe to send password in plain text over HTTPS? If not, what other options are available?
A.	From Microsoft Copilot
	It is standard practice to send passwords over HTTPS in plain text. 
	Ensure that you send the password via a POST request, not a GET request. GET requests could expose the password in browser history logs or web server access logs.
	Some login forms use JavaScript to hash the password before sending it. However, this approach doesn’t significantly enhance security.
	Other considerations:
		-	Consider setting an authenticated cookie after successful authentication.
		-	Another option is using HTTP Digest Authorization over HTTPS.
		-	HTTP Basic Auth: While not ideal, HTTP Basic Auth over HTTPS is still more secure than sending credentials in the URL
======================================================================================================================================================================
Q.	How to deal with model validation (DTO) in ASP.NET Core MVC?
A.	From Microsoft Copilot and my own testgs
	A good way is to use DataAnnotation attributes for simple validations. For complex validation, one of the following options can be used:
		-	Custom Validation Attributes
		-	FluentValidation: FluentValidation is a powerful library that provides expressive validation rules
		-	Service Layer Validation: Implement custom validation logic in your service layer.
		-	Middleware for Validation: Create a custom middleware that intercepts requests before reaching the controller.
		-	Domain-Driven Design (DDD) Validators: If you follow DDD principles, consider placing validation logic within your domain entities or value objects
	* The first thing I'll test in this project is "Service Layer Validation"
======================================================================================================================================================================